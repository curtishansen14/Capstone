@model CapStone.Models.Quest

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Quest</h4>
    <hr />
    <dl class="dl-horizontal">
        @*<dt>
            @Html.DisplayNameFor(model => model.ETA.TIME)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ETA.TIME)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Topic.theme)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Topic.theme)
        </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        @*<dt>
            @Html.DisplayNameFor(model => model.isFlagged)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.isFlagged)
        </dd>*@

    </dl>
    <table class="table">

        @foreach (var item in Model.Labors)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ETA.TIME)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quest.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @*@Html.ActionLink("Edit", "Edit", new { id = item.Labor_ID }) |*@
                    @*@Html.ActionLink("Details", "Details", new { id = item.Labor_ID }) 
                    @Html.ActionLink("Delete", "Delete", new { id = item.Labor_ID })*@
                </td>
            </tr>
        }

    </table>

</div>
<p>
    @Html.ActionLink("Accept Challenge","AddToProfile", new { id = Model.Quest_ID }) |
    @Html.ActionLink("Flag", "Edit", new { id = Model.Quest_ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>



<head>
    <style>
        #map {
            height: 400px;
            width: 100%;
        }
    </style>
</head>
<body>
    <h3>"Now no way can I stray;"</h3>
    <div id="map"></div>
    <script>
        var latlng = {lat: 43.0731, lng: -89.4012};
        function getLatLng(address){
            var cleanAddress = address.split(' ').join('+');
            var settings = {
                "async": false,
                "crossDomain": true,
                "url": "http://maps.googleapis.com/maps/api/geocode/json?address="+cleanAddress+"&senor=false",
                "method": "GET",
            }

            $.ajax(settings).done(function (response) {
                latlng =  response["results"][0]['geometry']['location'];
            });
        }
        function initMap() {

            var quest = @Html.Raw(Json.Encode(Model)); //need away to get the model Quest 
        var LaborLatLng = {lat: 43.0731, lng: -89.4012}; //Product of a method I haven't written in API Calls perhaps an array of coordinates
        var map = new google.maps.Map(document.getElementById("map"), {
          zoom: 14,
          center: LaborLatLng
        });
        for (i = 0; i < quest.Labors.length; i++) //loop over labors or [].length 
        {
            if (quest.Labors[i]['Location'] != null) //get locations from Labors 
            {
                getLatLng(quest.Labors[i]['Location']) 

                var marker = new google.maps.Marker({
                    position: latlng,
                    map: map
                });
                
            }
        }

       
      }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBYRtMdjjBLttrxgkgrS48RWxSNCLwgGGs&callback=initMap">
        //scr="http://maps.googleapis.com/maps/api/geocode/xml?address={0}&senor=false", Uri.EscapeDataString(address));>
    </script>

</body>







